general:
  artifacts:

## Customize the test machine
machine:
  # Add some environment variables
  environment:
    CROSS_COMPILE: $(case $CIRCLE_NODE_INDEX in 0) host='' ;; 1) host='i686-w64-mingw32-' ;; 2) host='arm-linux-androideabi-' ;; esac; echo $host)
    MKARG: [[ $CIRCLE_NODE_INDEX -eq 0 ]] && echo 'dpdk=yes'
    PATH: /home/ubuntu/android-toolchain/bin:${PATH}
    VALGRIND: [[ -n "${RUN_NIGHTLY_BUILD}" ]] && echo "valgrind"

## Customize dependencies
dependencies:
  pre:
    # required for 14.04 container
    # - sudo dpkg --add-architecture i386
    - sudo apt-get update; sudo apt-get install bc libfuse-dev libarchive-dev xfsprogs $VALGRIND gcc-mingw-w64-i686 wine qemu-user-static linux-headers-$(uname -r)
    - [[ $CIRCLE_NODE_INDEX -eq 2 ]] && /usr/local/android-ndk/build/tools/make-standalone-toolchain.sh --platform=android-21 --install-dir=/home/ubuntu/android-toolchain --arch=arm


test:
  pre:
    - sudo cp tools/lkl/bin/i686-w64-mingw32-* /usr/bin:
        parallel: true

  override:
    - cd tools/lkl && make clean:
        parallel: true
    - cd tools/lkl && if [ $CIRCLE_NODE_INDEX -eq 0]; then ./scripts/dpdk-sdk-build.sh; fi:
        parallel: true
    - cd tools/lkl &&  make -j8 ${MKARG}:
        parallel: true
    - cd tools/lkl && if [ $CIRCLE_NODE_INDEX -eq 2 ] ; then make tests/boot-in.o; arm-linux-androideabi-gcc -o tests/boot tests/boot-in.o liblkl.a -static ; fi:
        parallel: true
    - cd tools/lkl && make test:
         parallel: true

    - ? >
        if [ -n "${RUN_NIGHTLY_BUILD}" ]; then
          cd tools/lkl && make valgrind;
        fi
      : timeout: 1800 # timeout to 30mins

  post:
    - mkdir -p $CIRCLE_TEST_REPORTS/junit/
    - find ./tools/lkl/ -type f -name "*.xml" -exec cp {} $CIRCLE_TEST_REPORTS/ \;
